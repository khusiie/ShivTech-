"use client";
import { useState, useEffect, ReactElement } from "react";

// Define a type for a technology item
interface TechItem {
  name: string;
  svg: ReactElement;
}

const techStack = [
  { 
    name: "PostgreSQL", 
    svg: (
     <svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72" fill="none">
  <path d="M50.1757 3.86035C47.5776 3.88466 44.9941 4.25189 42.4922 4.95252L42.3151 5.00565C40.7397 4.73553 39.146 4.58652 37.5479 4.55993C34.2626 4.50384 31.4377 5.27721 29.1648 6.56715C26.9214 5.81149 22.2694 4.50975 17.3665 4.76951C13.9512 4.94957 10.2261 5.95613 7.46614 8.78395C4.71211 11.6118 3.25687 15.9863 3.56386 21.9401C3.64651 23.5843 4.12765 26.2615 4.93054 29.7329C5.72753 33.2012 6.85511 37.2599 8.25722 40.9645C9.65932 44.669 11.1972 48.0015 13.6 50.2626C14.7984 51.3961 16.4485 52.3495 18.3937 52.2698C19.7604 52.2167 20.9972 51.6352 22.0628 50.7762C22.5823 51.4404 23.1372 51.7297 23.642 51.9983C24.2766 52.3348 24.8965 52.565 25.537 52.7185C27.3108 53.1734 29.1583 53.2647 30.9684 52.9871C31.7565 52.8602 32.5859 52.6123 33.4124 52.258C33.442 53.1495 33.4774 54.0232 33.5158 54.9088C33.6279 57.713 33.7017 60.3017 34.5695 62.5716C34.7083 62.9435 35.0891 64.8534 36.5974 66.5388C38.1029 68.2273 41.0546 69.2781 44.4138 68.5815C46.7841 68.0885 49.8008 67.2 51.8022 64.4372C53.7799 61.7038 54.6742 57.7838 54.8514 51.4227C54.8956 51.0803 54.9488 50.788 55.0048 50.5135L55.4771 50.5548H55.5303C58.06 50.667 60.8051 50.3187 63.0987 49.2856C65.1295 48.3705 66.6645 47.4496 67.7832 45.8113C68.0636 45.4069 68.3706 44.9169 68.4532 44.0697C68.5359 43.2285 68.04 41.9061 67.2105 41.298C65.5487 40.076 64.5067 40.5394 63.388 40.7667C62.2859 41.0028 61.1682 41.1337 60.0347 41.1593C63.261 35.8933 65.5723 30.2967 66.8917 25.3435C67.671 22.4213 68.1108 19.7263 68.1463 17.3707C68.1817 15.0152 67.9839 12.9283 66.5287 11.1218C61.9799 5.48384 55.5834 3.92529 50.6362 3.87216C50.4827 3.86822 50.3292 3.86724 50.1757 3.86921V3.86035ZM50.0458 5.59306C54.7244 5.54878 60.7048 6.82396 64.9967 12.146C65.9619 13.3415 66.2482 15.089 66.2158 17.2438C66.1804 19.3957 65.7701 21.9696 65.0203 24.7916C63.5651 30.2583 60.814 36.6283 56.9383 42.3488C57.0759 42.4442 57.2246 42.5225 57.381 42.582C58.1898 42.9067 60.0318 43.1842 63.7127 42.4522C64.6366 42.2603 65.3155 42.1334 66.018 42.6529C66.1861 42.7924 66.3197 42.9689 66.4083 43.1686C66.4969 43.3683 66.5381 43.5858 66.5287 43.8041C66.4896 44.1338 66.3644 44.4474 66.1656 44.7132C65.4572 45.7493 64.0521 46.7323 62.2515 47.5411C60.6605 48.2613 58.3758 48.6362 56.3509 48.6598C55.3354 48.6686 54.3997 48.5919 53.6057 48.3528L53.5526 48.3351C53.2456 51.2013 52.5401 56.8658 52.0826 59.4486C51.7136 61.5326 51.0701 63.1885 49.8392 64.4283C48.6113 65.6681 46.8756 66.4149 44.5378 66.9019C41.6421 67.5041 39.5315 66.8547 38.1707 65.7419C36.8129 64.6349 36.1901 63.162 35.8152 62.2587C35.5584 61.6389 35.4256 60.833 35.2957 59.7556C35.1529 58.4657 35.0574 57.1709 35.0094 55.874C34.9246 53.6002 34.8971 51.3246 34.9267 49.0494C33.7165 50.1209 32.2111 50.8353 30.5964 51.1039C28.6778 51.4197 26.9598 51.1098 25.9355 50.8618C25.4334 50.7381 24.9478 50.5547 24.4892 50.3158C24.011 50.0708 23.5593 49.7933 23.2583 49.2442C23.0809 48.9309 23.0242 48.5634 23.0989 48.2111C23.1955 47.8532 23.4097 47.5382 23.7069 47.3167C24.2619 46.8799 24.991 46.6378 26.092 46.4135C28.0992 46.015 28.7988 45.7405 29.2238 45.4128C29.5869 45.1324 29.9972 44.5656 30.7234 43.7303L30.7145 43.6211C29.4204 43.5831 28.1518 43.252 27.0041 42.6529C26.5879 43.0779 24.4508 45.2711 21.8443 48.3115C20.7492 49.5837 19.539 50.3128 18.2609 50.3659C16.9827 50.4191 15.8286 49.7933 14.8486 48.8723C12.8856 47.0245 11.3212 43.8454 9.95745 40.2531C8.59963 36.6578 7.48975 32.6551 6.70457 29.2458C5.91349 25.8365 5.44711 23.0884 5.38217 21.763C5.08699 16.128 6.44481 12.332 8.77673 9.9381C11.1087 7.5442 14.3025 6.63504 17.4196 6.46384C23.0103 6.15095 28.3206 8.04305 29.395 8.4504C31.4643 7.08667 34.1297 6.23655 37.4623 6.28968C39.0419 6.31165 40.6141 6.50966 42.1498 6.88004L42.2059 6.85643C42.8828 6.62619 43.5696 6.43334 44.2662 6.27787C46.1627 5.84982 48.0989 5.62226 50.0429 5.59896L50.0458 5.59306ZM50.4679 7.40546H50.0635C48.4665 7.42697 46.8751 7.60094 45.3111 7.92498C48.4156 9.27713 51.1433 11.3664 53.2574 14.0116C54.5381 15.594 55.6004 17.3414 56.4158 19.2067C56.7228 19.9211 56.9294 20.5262 57.0445 20.9926C57.1036 21.2287 57.1449 21.4265 57.1567 21.6331C57.1676 21.7639 57.1566 21.8956 57.1242 22.0228L57.1065 22.0582C57.1921 24.4285 56.587 26.0343 56.5132 28.2953C56.4571 29.9365 56.8881 31.8641 56.9944 33.9628C57.0947 35.9405 56.8497 38.1101 55.5273 40.2413C55.6375 40.3711 55.7438 40.501 55.8461 40.6309C59.344 35.2881 61.8678 29.3727 63.2108 24.334C63.9281 21.6184 64.3119 19.1595 64.3443 17.2113C64.3739 15.2631 63.999 13.8492 63.5208 13.2618C59.7779 8.61865 54.7156 7.43793 50.4679 7.40546ZM37.111 8.09618C33.8139 8.10209 31.4465 9.07028 29.6548 10.5167C27.804 12.0132 26.5643 14.0588 25.7496 16.1575C24.961 18.2549 24.4788 20.455 24.318 22.6899L24.3563 22.6692C25.3511 22.1261 26.6587 21.5859 28.0579 21.273C29.46 20.9601 30.9684 20.8627 32.335 21.3763C33.7017 21.8899 34.8323 23.1002 35.2426 24.9362C37.2055 33.7503 34.6315 37.0268 33.6811 39.4974C33.3245 40.3941 33.0171 41.3095 32.7601 42.2396C32.8782 42.2062 32.9972 42.1826 33.1173 42.1688C33.6358 42.1407 34.1531 42.2422 34.6227 42.464C35.5791 42.8477 36.2344 43.6506 36.5886 44.5716C36.6811 44.8156 36.747 45.0714 36.7864 45.339C36.8257 45.4512 36.8444 45.5663 36.8424 45.6844C36.7364 49.0547 36.7482 52.4277 36.8779 55.7972C36.9428 57.2554 37.0373 58.5365 37.1583 59.549C37.2764 60.5585 37.4476 61.326 37.5568 61.5857C37.911 62.4535 38.4335 63.587 39.378 64.3575C40.3226 65.1279 41.6716 65.6385 44.1422 65.1249C46.2852 64.6792 47.6076 64.0623 48.4932 63.1679C49.3728 62.2794 49.9012 61.0426 50.2377 59.1446C50.7425 56.302 51.7579 48.0635 51.8789 46.5109C51.8258 45.3449 52.0029 44.4446 52.3866 43.7598C52.7851 43.0573 53.3991 42.6263 53.9274 42.3931C54.1931 42.2751 54.4411 42.1983 54.6447 42.1422C54.4277 41.842 54.2013 41.5486 53.9658 41.2626C53.2025 40.3696 52.5767 39.3678 52.1091 38.2901C51.8839 37.8468 51.6446 37.4107 51.3918 36.9825C51.0229 36.3331 50.5535 35.5213 50.0635 34.6092C49.0806 32.7821 48.012 30.5682 47.4571 28.4105C46.9051 26.2586 46.8225 24.03 48.2393 22.4567C49.4968 21.0605 51.6988 20.4819 55.0078 20.8066C54.9104 20.5233 54.8514 20.2871 54.6861 19.9093C53.9394 18.1943 52.9632 16.5886 51.7844 15.1362C48.9802 11.659 44.4433 8.2113 37.4298 8.09913H37.111V8.09618ZM18.5856 8.23492C18.2313 8.23492 17.8771 8.24476 17.5229 8.26443C14.7069 8.42088 12.0444 9.21491 10.1405 11.1749C8.23065 13.1319 6.97614 16.3435 7.2477 21.6626C7.30379 22.6663 7.75541 25.4882 8.52878 28.8355C9.30215 32.1888 10.4002 36.1294 11.7167 39.6096C13.0332 43.0927 14.6331 46.1242 16.1503 47.5588C16.9148 48.2761 17.579 48.5653 18.1812 48.5417C18.7863 48.5122 19.5124 48.1757 20.4039 47.1396C22.0273 45.2398 23.7107 43.3921 25.4514 41.5991C24.2215 40.5677 23.2747 39.2399 22.7004 37.7411C22.1307 36.2565 21.9578 34.6491 22.1986 33.0772C22.4849 31.0759 22.5233 29.2045 22.4908 27.7286C22.4554 26.2881 22.3491 25.3317 22.3491 24.7325V24.6499C22.3461 21.5302 22.905 18.4355 23.9992 15.5141C24.7784 13.5009 25.9414 11.4553 27.686 9.79937C25.9739 9.25329 22.9336 8.42088 19.6423 8.26443C19.2884 8.24548 18.9341 8.23564 18.5797 8.23492H18.5856ZM53.1629 22.5275C51.2708 22.5511 50.2082 23.0264 49.6503 23.6463C48.8592 24.5259 48.7854 26.0667 49.2754 27.9677C49.7654 29.8686 50.772 31.9969 51.7225 33.7621C52.1947 34.6476 52.6552 35.4446 53.0271 36.0881C53.402 36.7375 53.6765 37.198 53.8418 37.5935C53.9993 37.9497 54.1646 38.2754 54.3377 38.5705C55.0698 37.0681 55.2026 35.5951 55.1259 34.0572C55.0285 32.1563 54.5739 30.2111 54.6418 28.2422C54.7156 25.9398 55.1849 24.4373 55.2262 22.6574C54.5416 22.574 53.8526 22.5306 53.1629 22.5275ZM30.1979 22.8375C29.6197 22.8418 29.0437 22.9092 28.48 23.0382C27.3593 23.3024 26.2778 23.7112 25.2625 24.2543C24.9221 24.4314 24.5974 24.6371 24.2884 24.8713L24.2294 24.9244C24.2471 25.3199 24.3268 26.2793 24.3622 27.6873C24.3917 29.2311 24.3563 31.1999 24.0493 33.3252C23.3822 37.9536 26.8417 41.7851 30.9093 41.791C31.1455 40.8405 31.5381 39.8782 31.9277 38.8628C33.0612 35.9021 35.2898 33.7444 33.4124 25.317C33.1055 23.9385 32.4974 23.3806 31.6591 23.0648C31.1897 22.9018 30.6947 22.8248 30.1979 22.8375ZM52.2774 23.3894H52.4191C52.6041 23.3954 52.7713 23.415 52.9209 23.4485C53.0566 23.4758 53.1865 23.5267 53.3046 23.599C53.3584 23.6307 53.4048 23.6733 53.4409 23.7242C53.4771 23.7751 53.502 23.833 53.5142 23.8942V23.9178C53.5219 24.0475 53.4867 24.1762 53.4138 24.2838C53.3315 24.4327 53.2281 24.5689 53.1068 24.6882C52.8208 24.9918 52.4436 25.1939 52.0324 25.2638C51.6293 25.3116 51.2225 25.212 50.8871 24.9834C50.7521 24.8942 50.6299 24.787 50.524 24.6646C50.4345 24.5691 50.3732 24.4505 50.3469 24.3222C50.3405 24.2591 50.3477 24.1953 50.3681 24.1352C50.3884 24.0751 50.4215 24.0201 50.465 23.9739C50.5594 23.8748 50.6702 23.7929 50.7926 23.7319C51.2602 23.5172 51.7661 23.3987 52.2803 23.3835L52.2774 23.3894ZM30.4695 23.844C30.6171 23.844 30.7716 23.8558 30.9329 23.8794C31.358 23.9385 31.7388 24.0477 32.028 24.21C32.1697 24.2829 32.2937 24.3783 32.4 24.4964C32.4551 24.5613 32.4964 24.6331 32.524 24.7119C32.5515 24.7906 32.5604 24.8722 32.5505 24.9569C32.5237 25.1134 32.4507 25.2583 32.3409 25.3731C32.2267 25.5106 32.0924 25.63 31.9424 25.7273C31.5759 25.9769 31.1311 26.085 30.6909 26.0313C30.2442 25.9592 29.8336 25.7425 29.522 25.4144C29.3924 25.2823 29.2813 25.1333 29.1914 24.9716C29.0994 24.8301 29.0588 24.6613 29.0763 24.4934C29.1176 24.1982 29.3685 24.0507 29.6076 23.9621C29.884 23.8744 30.1742 23.8384 30.4636 23.8558L30.4695 23.844ZM55.7369 43.7155H55.728C55.3177 43.8631 54.9812 43.9222 54.6949 44.0402C54.4097 44.146 54.1733 44.353 54.0308 44.6217C53.8536 44.9317 53.7061 45.4837 53.7503 46.4223C53.8775 46.5063 54.0169 46.57 54.1636 46.6112C54.6388 46.7529 55.4388 46.8474 56.3332 46.8326C58.1101 46.812 60.3004 46.4105 61.4634 45.8851C62.4168 45.4541 63.3024 44.8933 64.0934 44.2203C60.2059 44.9996 58.0127 44.7929 56.6638 44.2528C56.331 44.117 56.019 43.9381 55.7369 43.7155ZM33.3386 43.9664H33.2796C33.132 43.9782 32.9165 44.0255 32.5033 44.4741C31.5292 45.5309 31.1927 46.1921 30.3898 46.812C29.5928 47.4318 28.5508 47.7595 26.4728 48.1727C25.8145 48.3026 25.4396 48.4473 25.1858 48.5624C25.2684 48.6273 25.2596 48.645 25.3806 48.707C25.6846 48.8694 26.0772 49.0111 26.3901 49.0908C27.2845 49.3062 28.7516 49.5601 30.2835 49.3062C31.8155 49.0524 33.4065 48.341 34.7644 46.4932C35.0005 46.1744 35.0241 45.7021 34.8323 45.1944C34.6345 44.6926 34.2094 44.2557 33.9083 44.1317C33.7287 44.047 33.5361 43.9932 33.3386 43.9723V43.9664Z" fill="white"/>
</svg>
    )
  },
  { 
    name: "Stripe", 
    svg: (
      <svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72" fill="none">
  <g clip-path="url(#clip0_366_37036)">
    <path d="M9.79289 0.523438C7.4443 0.523438 5.19189 1.45641 3.53119 3.11712C1.87048 4.77783 0.9375 7.03024 0.9375 9.37883L0.9375 62.5112C0.9375 64.8598 1.87048 67.1122 3.53119 68.7729C5.19189 70.4336 7.4443 71.3666 9.79289 71.3666H62.9253C65.2739 71.3666 67.5263 70.4336 69.187 68.7729C70.8477 67.1122 71.7807 64.8598 71.7807 62.5112V9.37883C71.7807 7.03024 70.8477 4.77783 69.187 3.11712C67.5263 1.45641 65.2739 0.523438 62.9253 0.523438L9.79289 0.523438ZM37.3597 24.3666C34.774 24.3666 33.211 25.0927 33.211 26.9922C33.211 29.0644 35.8986 29.9765 39.2327 31.11C44.6699 32.9475 51.825 35.3738 51.856 44.3621C51.856 53.0713 44.878 58.0835 34.7208 58.0835C30.1387 58.0643 25.6075 57.1216 21.3979 55.3118V43.7289C25.4979 45.9693 30.6739 47.6253 34.7253 47.6253C37.4571 47.6253 39.4098 46.8947 39.4098 44.6543C39.4098 42.3607 36.4963 41.3114 32.9763 40.0451C27.6188 38.1146 20.8621 35.6794 20.8621 27.5767C20.8621 18.9648 27.4506 13.8065 37.3597 13.8065C41.5008 13.7695 45.6105 14.5286 49.4651 16.0425V27.4793C45.7547 25.4868 41.0701 24.3666 37.3597 24.3666Z" fill="white"/>
  </g>
  <defs>
    <clipPath id="clip0_366_37036">
      <rect width="70.8432" height="70.8432" fill="white" transform="translate(0.9375 0.523438)"/>
    </clipPath>
  </defs>
</svg>
    )
  },
  { 
    name: "Next.JS", 
    svg: (
    <svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72" fill="none">
  <path d="M33.7408 7.53108L32.8464 7.61078C24.4633 8.36644 16.6086 12.8916 11.6318 19.843C8.88212 23.6607 7.09484 28.0859 6.42191 32.7424C6.18577 34.36 6.15625 34.8382 6.15625 37.0373C6.15625 39.2363 6.18577 39.7145 6.42191 41.338C8.02474 52.422 15.9149 61.735 26.6122 65.1856C28.5309 65.8025 30.5499 66.2217 32.8464 66.4785C33.7408 66.5759 37.6077 66.5759 38.5021 66.4785C42.4663 66.0357 45.8225 65.0587 49.1374 63.3673C49.6451 63.1075 49.7425 63.0367 49.6746 62.9806C49.6274 62.9452 47.4637 60.0436 44.8661 56.5339L40.1462 50.158L34.2308 41.4059C32.2644 38.4782 30.2798 35.5627 28.277 32.6597C28.2534 32.6538 28.2298 36.5414 28.218 41.2908C28.2003 49.606 28.1944 49.9396 28.0911 50.1373C27.9892 50.367 27.8094 50.5531 27.5834 50.6628C27.3974 50.7513 27.238 50.772 26.3672 50.772H25.3666L25.1009 50.6037C24.9404 50.4965 24.8086 50.3516 24.7172 50.1816L24.5932 49.9219L24.605 38.3538L24.6227 26.7798L24.7998 26.5554C24.9188 26.4113 25.064 26.2911 25.2278 26.2012C25.464 26.0861 25.5584 26.0743 26.5561 26.0743C27.7339 26.0743 27.9287 26.1215 28.2357 26.458C28.3243 26.5466 31.524 31.3728 35.3554 37.1819L47.0032 54.8218L51.6759 61.9002L51.9121 61.7468C54.0078 60.383 56.2217 58.4466 57.978 56.4247C61.6976 52.1691 64.1102 46.9307 64.9265 41.338C65.1627 39.7145 65.1922 39.2363 65.1922 37.0373C65.1922 34.8411 65.1627 34.36 64.9265 32.7394C63.3237 21.6554 55.4336 12.3425 44.7362 8.89186C42.7356 8.25574 40.6755 7.82453 38.5877 7.60488C38.0357 7.54584 34.219 7.48681 33.7408 7.53108ZM45.8255 25.3836C46.1029 25.5223 46.3273 25.788 46.407 26.0625C46.4542 26.213 46.466 29.4216 46.4542 36.6506L46.4365 47.0261L44.6064 44.2219L42.7733 41.4177V33.8759C42.7733 28.9995 42.7969 26.2602 42.8323 26.1274C42.8737 25.9743 42.9454 25.8311 43.0433 25.7064C43.1412 25.5816 43.2632 25.4778 43.402 25.4013C43.6382 25.2802 43.7267 25.2684 44.63 25.2684C45.486 25.2684 45.6336 25.2802 45.8255 25.3836Z" fill="white"/>
</svg>
    )
  },
  { 
    name: "Python", 
    svg: (
      <svg viewBox="0 0 24 24" className="w-full h-full" fill="currentColor">
        <path d="M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.18l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09zm13.09 3.95l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08z"/>
      </svg>
    )
  },
  { 
    name: "GitHub", 
    svg: (
      <svg viewBox="0 0 24 24" className="w-full h-full" fill="currentColor">
        <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>
      </svg>
    )
  },
  { 
    name: "AWS", 
    svg: (
    <svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72" fill="none">
  <path d="M23.4651 30.8616C23.4651 31.5995 23.5241 32.1899 23.6717 32.6917C23.8193 33.0459 24.0259 33.5182 24.2916 34.0495C24.4097 34.1676 24.4392 34.3447 24.4392 34.4923C24.4392 34.6989 24.3211 34.876 24.0554 35.0827L22.8157 35.9092C22.6386 36.0272 22.4615 36.0863 22.3139 36.0863C22.1073 36.0863 21.9301 35.9682 21.7235 35.7911C21.4579 35.4959 21.2217 35.2007 21.0151 34.876C20.838 34.5513 20.6314 34.1676 20.4247 33.7248C18.8898 35.5254 16.9711 36.4405 14.6392 36.4405C12.9862 36.4405 11.6874 35.9682 10.7133 35.0236C9.76874 34.079 9.26693 32.8098 9.26693 31.2158C9.26693 29.5923 9.85729 28.264 11.038 27.2014C12.2482 26.1977 13.8422 25.6664 15.8494 25.6664C16.5284 25.6664 17.1482 25.7255 17.9452 25.8435C18.6241 25.9321 19.4211 26.0797 20.1886 26.2568V24.8399C20.1886 23.3345 19.8934 22.3604 19.2735 21.6815C18.6241 21.0616 17.591 20.796 16.0856 20.796C15.3772 20.796 14.6687 20.8845 13.9603 21.0321C13.2223 21.2092 12.5139 21.4158 11.835 21.711C11.5103 21.8291 11.2446 21.9176 11.1561 21.9472C11.0085 22.0062 10.9199 22.0062 10.8314 22.0062C10.5657 22.0062 10.4181 21.8291 10.4181 21.4158V20.4417C10.4181 20.1466 10.4477 19.9104 10.5657 19.7628C10.6543 19.6152 10.8314 19.4972 11.097 19.4086C11.8055 18.9954 12.6025 18.7002 13.5766 18.464C14.5786 18.202 15.6107 18.073 16.6464 18.0803C18.9783 18.0803 20.6904 18.6116 21.7826 19.6743C22.8747 20.7369 23.406 22.3604 23.406 24.5152V30.8616H23.4651ZM15.4952 33.8724C16.1446 33.8724 16.794 33.7543 17.5024 33.5182C18.2109 33.2821 18.8308 32.8393 19.3621 32.2489C19.6868 31.8652 19.9229 31.4519 20.1 30.9797C20.1 30.5074 20.2476 29.9465 20.2476 29.2676V28.4706C19.6573 28.264 19.0669 28.264 18.4175 28.1164C17.8095 28.05 17.1989 28.0106 16.5874 27.9983C15.2591 27.9983 14.3145 28.264 13.6651 28.7953C13.0157 29.3267 12.7205 30.0646 12.7205 31.0387C12.7205 31.9833 12.9272 32.6917 13.429 33.1345C13.9013 33.6363 14.5802 33.8724 15.4952 33.8724ZM31.2578 35.9682C30.9721 35.9767 30.6885 35.916 30.4313 35.7911C30.3428 35.6435 30.1952 35.3778 30.0771 35.0236L25.4723 19.8514C25.3542 19.4086 25.2952 19.202 25.2952 19.0544C25.2952 18.7297 25.4428 18.5526 25.7675 18.5526H27.6862C28.0699 18.5526 28.3356 18.6116 28.4536 18.7592C28.6307 18.8773 28.7488 19.1429 28.8669 19.5267L32.1434 32.5146L35.2132 19.5267C35.3018 19.1429 35.4199 18.8773 35.597 18.7592C35.7446 18.6411 36.0102 18.5526 36.3349 18.5526H37.9584C38.3126 18.5526 38.5783 18.6116 38.7259 18.7592C38.8735 18.8773 39.0211 19.1429 39.1096 19.5267L42.2385 32.6917L45.6036 19.5267C45.7216 19.1429 45.8692 18.8773 45.9873 18.7592C46.1644 18.6411 46.4006 18.5526 46.7548 18.5526H48.5849C48.9096 18.5526 49.0867 18.7297 49.0867 19.0544C49.0867 19.1429 49.0572 19.261 49.0277 19.4086C49.0277 19.4086 48.9686 19.6448 48.9096 19.8514L44.1572 35.0236C44.0391 35.4369 43.921 35.6435 43.7144 35.7911C43.5963 35.9092 43.3307 35.9977 43.006 35.9977H41.3235C40.9397 35.9977 40.7626 35.9387 40.5265 35.7911C40.328 35.5807 40.2036 35.3112 40.1723 35.0236L37.1319 22.3604L34.0916 34.9941C34.003 35.3778 33.8849 35.6435 33.7373 35.7911C33.4936 35.9239 33.2174 35.9853 32.9404 35.9682H31.2578ZM56.4957 36.4995C55.5216 36.4995 54.4294 36.3814 53.4553 36.1453C52.4813 35.9092 51.7138 35.6435 51.212 35.3778C50.9556 35.2545 50.7404 35.0598 50.5921 34.817C50.5119 34.6515 50.4715 34.4696 50.474 34.2857V33.2821C50.474 32.8688 50.6216 32.6917 50.9168 32.6917H51.271C51.3891 32.6917 51.5662 32.8393 51.7728 32.9278C52.4222 33.223 53.1602 33.4592 53.9276 33.6068C54.7246 33.7543 55.5216 33.8429 56.2596 33.8429C57.4993 33.8429 58.4734 33.6363 59.1228 33.1935C59.8017 32.6917 60.1559 32.1309 60.1559 31.3339C60.1559 30.773 59.9493 30.3303 59.6246 29.9465C59.2704 29.5923 58.5915 29.2381 57.6469 28.9429L54.7837 28.0574C53.3668 27.5851 52.3042 26.9357 51.6548 26.0502C51.021 25.2304 50.6783 24.223 50.6807 23.1869C50.6807 22.3604 50.8578 21.652 51.212 21.0321C51.5662 20.3827 52.0385 19.8514 52.5698 19.4086C53.2192 18.9658 53.8686 18.6411 54.6656 18.405C55.4331 18.1689 56.2596 18.0508 57.1451 18.0508C57.5583 18.0508 58.0011 18.0803 58.4734 18.1393C58.8867 18.1984 59.2999 18.2869 59.7132 18.346C60.1264 18.464 60.4806 18.5526 60.8348 18.6707C61.1891 18.7887 61.4252 18.9068 61.6614 19.0249C61.927 19.1725 62.1336 19.3201 62.2517 19.4972C62.3698 19.6743 62.4288 19.8809 62.4288 20.1466V21.0911C62.4288 21.5044 62.2812 21.711 61.986 21.711C61.8385 21.711 61.5728 21.6225 61.2186 21.4749C60.1264 20.9731 58.8571 20.7074 57.4698 20.7074C56.3481 20.7074 55.5216 20.8845 54.8427 21.2682C54.2523 21.6225 53.9276 22.2128 53.9276 23.0098C53.9276 23.5706 54.1343 24.0429 54.518 24.3971C54.9017 24.7809 55.6397 25.1351 56.6728 25.4893L59.477 26.3749C60.8939 26.7881 61.8975 27.4375 62.5174 28.264C63.1077 29.061 63.4029 29.976 63.4029 31.0092C63.4029 31.8357 63.2258 32.6031 62.9011 33.2821C62.5469 33.9315 62.0746 34.5218 61.4252 34.9941C60.8644 35.4959 60.1264 35.8501 59.2999 36.1158C58.4734 36.3814 57.4698 36.4995 56.4957 36.4995ZM60.1855 46.0633C53.721 50.8157 44.3343 53.3543 36.3349 53.3543C24.9705 53.3543 14.7868 49.1627 7.0826 42.226C6.46272 41.6652 7.02357 40.9272 7.76152 41.37C16.0856 46.1814 26.3283 49.1037 36.9548 49.1037C44.1277 49.1037 52.009 47.6278 59.2409 44.4989C60.333 44.0561 61.2481 45.2664 60.1855 46.0633ZM62.9011 43.023C62.0451 41.9308 57.4108 42.4917 55.315 42.7278C54.6951 42.8164 54.6066 42.2555 55.1674 41.8423C58.8571 39.2742 64.9378 40.0712 65.6168 40.8682C66.3252 41.7537 65.4397 47.8344 61.986 50.7272C61.4252 51.17 60.9234 50.9338 61.1595 50.4025C61.9565 48.3953 63.6981 44.0266 62.9011 43.023Z" fill="white"/>
</svg>
    )
  },
  { 
    name: "Twilio", 
    svg: (
      <svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72" fill="none">
  <path d="M36.2692 0.824242C16.7364 0.802103 0.869795 16.6201 0.847656 36.1661V36.2458C0.847656 55.8472 16.6678 71.6674 36.2692 71.6674C55.8706 71.6674 71.6908 55.8472 71.6908 36.2458C71.6908 16.6444 55.8706 0.824242 36.2692 0.824242ZM36.2692 62.2231C21.9589 62.2696 10.3362 50.7045 10.2919 36.3941V36.2436C10.2454 21.9333 21.8106 10.3106 36.1209 10.2663H36.2714C50.5818 10.2198 62.2045 21.785 62.2487 36.0953V36.2458C62.2952 50.5561 50.7301 62.1788 36.4198 62.2231H36.2692ZM52.3307 27.5055C52.3202 29.444 51.5455 31.3001 50.1748 32.6708C48.8041 34.0416 46.948 34.8163 45.0095 34.8267C43.0709 34.8169 41.2144 34.0423 39.8436 32.6715C38.4727 31.3006 37.6982 29.4442 37.6883 27.5055C37.6883 23.4918 40.998 20.1843 45.0095 20.1843C49.021 20.1843 52.3307 23.4941 52.3307 27.5055ZM52.3307 44.9861C52.3202 46.9246 51.5455 48.7807 50.1748 50.1514C48.8041 51.5221 46.948 52.2968 45.0095 52.3073C43.071 52.2968 41.2149 51.5221 39.8442 50.1514C38.4735 48.7807 37.6988 46.9246 37.6883 44.9861C37.6883 40.9724 40.998 37.6649 45.0095 37.6649C49.021 37.6649 52.3307 40.9746 52.3307 44.9861ZM34.8502 44.9861C34.8502 48.9998 31.5515 52.3073 27.54 52.3073C25.6007 52.2997 23.7429 51.5259 22.3715 50.1546C21.0002 48.7832 20.2264 46.9255 20.2188 44.9861C20.2264 43.0467 21.0002 41.1889 22.3715 39.8176C23.7429 38.4462 25.6007 37.6725 27.54 37.6649C31.5405 37.6649 34.8502 40.9746 34.8502 44.9861ZM34.8502 27.5055C34.8502 31.5193 31.5515 34.8267 27.54 34.8267C25.6007 34.8192 23.7429 34.0454 22.3715 32.674C21.0002 31.3027 20.2264 29.4449 20.2188 27.5055C20.2264 25.5662 21.0002 23.7084 22.3715 22.3371C23.7429 20.9657 25.6007 20.1919 27.54 20.1843C31.5405 20.1843 34.8502 23.4941 34.8502 27.5055Z" fill="white"/>
</svg>
    )
  },
  { 
    name: "Whatsup", 
    svg: (
     <svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" viewBox="0 0 80 80" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M40.0013 6.66699C21.5913 6.66699 6.66797 21.5903 6.66797 40.0003C6.66797 46.3003 8.41797 52.2003 11.4613 57.227L8.48797 67.3337C8.31725 67.9139 8.30602 68.5295 8.45545 69.1156C8.60488 69.7017 8.90946 70.2368 9.33717 70.6645C9.76487 71.0922 10.2999 71.3968 10.886 71.5462C11.4721 71.6956 12.0877 71.6844 12.668 71.5137L22.7746 68.5403C27.9704 71.6835 33.9288 73.3414 40.0013 73.3337C58.4113 73.3337 73.3346 58.4103 73.3346 40.0003C73.3346 21.5903 58.4113 6.66699 40.0013 6.66699ZM32.4613 47.5437C39.2046 54.2837 45.6413 55.1737 47.9146 55.257C51.3713 55.3837 54.738 52.7437 56.048 49.6803C56.2119 49.299 56.2712 48.8807 56.2197 48.4688C56.1681 48.0569 56.0076 47.6662 55.7546 47.337C53.928 45.0037 51.458 43.327 49.0446 41.6603C48.541 41.3111 47.9216 41.1709 47.3167 41.2691C46.7118 41.3673 46.1685 41.6964 45.8013 42.187L43.8013 45.237C43.6956 45.4003 43.5318 45.5174 43.343 45.5644C43.1542 45.6115 42.9546 45.585 42.7846 45.4903C41.428 44.7137 39.4513 43.3937 38.0313 41.9737C36.6113 40.5537 35.3713 38.667 34.6746 37.397C34.5904 37.2352 34.5665 37.0486 34.6075 36.8708C34.6484 36.693 34.7514 36.5357 34.898 36.427L37.978 34.1403C38.4188 33.759 38.7034 33.2284 38.7772 32.6502C38.851 32.072 38.7089 31.4869 38.378 31.007C36.8846 28.8203 35.1446 26.0403 32.6213 24.197C32.295 23.9625 31.9136 23.8163 31.5141 23.7725C31.1147 23.7287 30.7107 23.7888 30.3413 23.947C27.2746 25.2603 24.6213 28.627 24.748 32.0903C24.8313 34.3637 25.7213 40.8003 32.4613 47.5437Z" fill="white"/>
</svg>
    )
  },
 
];

// Define a type for styles returned by getCardStyle
interface CardStyle {
  size: string;
  padding: string;
  zIndex: string;
  scale: string;
  opacity: string;
}

export default function Technologies(): ReactElement {
  const [active, setActive] = useState<number>(2); // default index
  const [hovered, setHovered] = useState<number | null>(null);
  const [isAutoPlaying, setIsAutoPlaying] = useState<boolean>(true);

  // Responsive check for mobile
  const [isMobile, setIsMobile] = useState<boolean>(
    typeof window !== "undefined" ? window.innerWidth < 1024 : false
  );

  useEffect(() => {
    function updateSize() {
      setIsMobile(window.innerWidth < 1024);
    }
    window.addEventListener("resize", updateSize);
    return () => window.removeEventListener("resize", updateSize);
  }, []);

  // Autoplay effect: change active tech every 2 seconds if not paused
  useEffect(() => {
    if (!isAutoPlaying || hovered !== null || isMobile) return;

    const interval = setInterval(() => {
      setActive((prev) => (prev + 1) % techStack.length);
    }, 2000);

    return () => clearInterval(interval);
  }, [isAutoPlaying, hovered, isMobile]);

  // Handlers with typed parameters
  const handleUserInteraction = (idx: number): void => {
    setIsAutoPlaying(false);
    setActive(idx);
    setTimeout(() => setIsAutoPlaying(true), 5000);
  };

  const handleMouseEnter = (idx: number): void => {
    setHovered(idx);
    setIsAutoPlaying(false);
  };

  const handleMouseLeave = (): void => {
    setHovered(null);
    setTimeout(() => setIsAutoPlaying(true), 1000);
  };

  // Card style logic with return type
  const getCardStyle = (idx: number): CardStyle => {
    if (isMobile) {
      return {
        size: "w-16 h-16",
        padding: "p-4",
        zIndex: "",
        scale: "",
        opacity: "opacity-100",
      };
    }
    const displayActive = hovered !== null ? hovered : active;
    const isActive = idx === displayActive;
    const distance = Math.abs(idx - displayActive);

    if (isActive) {
      return {
        size: "w-20 h-20",
        padding: "p-5",
        zIndex: "z-50",
        scale: "scale-110",
        opacity: "opacity-100",
      };
    }
    if (distance === 1) {
      return {
        size: "w-16 h-16",
        padding: "p-4",
        zIndex: "z-30",
        scale: "scale-100",
        opacity: "opacity-90",
      };
    }
    if (distance === 2) {
      return {
        size: "w-12 h-12",
        padding: "p-3",
        zIndex: "z-20",
        scale: "scale-90",
        opacity: "opacity-75",
      };
    }
    return {
      size: "w-10 h-10",
      padding: "p-2",
      zIndex: "z-10",
      scale: "scale-80",
      opacity: "opacity-60",
    };
  };

  return (
    <section className="w-full bg-black text-white py-6 md:py-10 px-2 flex flex-col items-center overflow-hidden">
        <span className="px-4 py-1 rounded-full border border-gray-700 text-sm text-gray-300 mb-4">
         Our Stack
        </span>

      <h2 className="text-4xl sm:text-6xl font-bold mb-10 sm:mb-16 text-center">
        Technologies We Used
      </h2>

      {isMobile ? (
        <div className="w-full flex flex-col items-center mb-8">
          <div className="flex items-center justify-center w-full">
            <button
              aria-label="Previous"
              onClick={() => setActive((active - 1 + techStack.length) % techStack.length)}
              className="p-2 text-cyan-400 active:scale-90"
            >
              ◀
            </button>
            <div className="mx-6">
              <div
                className="transition-all duration-300 w-16 h-16 mx-auto flex items-center justify-center"
                style={{
                  borderRadius: "12px",
                  background: "linear-gradient(90deg, #01AAFF 0%, rgba(1, 170, 255, 0.40) 100%)",
                  boxShadow: "0 0 48px 0 rgba(153, 221, 255, 0.25)",
                }}
              >
                {techStack[active].svg}
              </div>
              <p className="mt-4 text-xl sm:text-3xl font-bold bg-gradient-to-r from-blue-400 to-cyan-300 bg-clip-text text-transparent text-center">
                {techStack[active].name}
              </p>
            </div>
            <button
              aria-label="Next"
              onClick={() => setActive((active + 1) % techStack.length)}
              className="p-2 text-cyan-400 active:scale-90"
            >
              ▶
            </button>
          </div>
          <div className="flex space-x-2 mt-5 justify-center">
            {techStack.map((_, idx) => (
              <button
                key={idx}
                onClick={() => handleUserInteraction(idx)}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  active === idx
                    ? "bg-cyan-400 w-5 shadow-lg shadow-cyan-400/50"
                    : "bg-gray-600 hover:bg-gray-400"
                }`}
                aria-label={`Goto ${techStack[idx].name}`}
              />
            ))}
          </div>
        </div>
      ) : (
        <>
          <div className="relative w-full max-w-5xl h-32 mb-12">
            <div className="absolute inset-0 flex items-center justify-center">
              <div className="flex items-center justify-center space-x-3 sm:space-x-8">
                {techStack.map((tech, idx) => {
                  const { size, padding, scale, opacity, zIndex } = getCardStyle(idx);
                  const displayActive = hovered !== null ? hovered : active;
                  const isActive = idx === displayActive;

                  return (
                    <button
                      key={idx}
                      onClick={() => handleUserInteraction(idx)}
                      onMouseEnter={() => handleMouseEnter(idx)}
                      onMouseLeave={handleMouseLeave}
                      className={`relative transition-all duration-500 ease-out transform ${
                        isActive
                          ? "text-white"
                          : "bg-gray-800/50 hover:bg-gray-700/60 text-gray-300 hover:text-white border border-gray-700/50"
                      } ${padding} ${scale} ${opacity} ${zIndex}`}
                      style={{
                        borderRadius: "12px",
                        background: isActive
                          ? "linear-gradient(90deg, #01AAFF 0%, rgba(1, 170, 255, 0.40) 100%)"
                          : undefined,
                        transform: isActive
                          ? "scale(1.2) translateY(-8px)"
                          : hovered === idx
                          ? "scale(1.1) translateY(-4px)"
                          : "scale(1)",
                        boxShadow: isActive
                          ? "0 0 78.85px 0 rgba(153, 221, 255, 0.50)"
                          : hovered === idx
                          ? "0 10px 25px -5px rgba(0, 0, 0, 0.3)"
                          : "none",
                      }}
                      aria-label={`Goto ${tech.name}`}
                    >
                      <div className={`transition-all duration-300 ${size}`}>{tech.svg}</div>
                    </button>
                  );
                })}
              </div>
            </div>
          </div>
          <div className="text-center min-h-[60px] flex flex-col items-center justify-center">
            <p className="text-3xl font-bold transition-all duration-300 bg-gradient-to-r from-blue-400 to-cyan-300 bg-clip-text text-transparent">
              {techStack[hovered !== null ? hovered : active].name}
            </p>
          </div>

          <div className="flex space-x-2 mt-6">
            {techStack.map((_, idx) => (
              <button
                key={idx}
                onClick={() => handleUserInteraction(idx)}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  (hovered !== null ? hovered : active) === idx
                    ? "bg-cyan-400 w-6 shadow-lg shadow-cyan-400/50"
                    : "bg-gray-600 hover:bg-gray-400"
                }`}
                aria-label={`Goto ${techStack[idx].name}`}
              />
            ))}
          </div>
        </>
      )}
    </section>
  );
}
